guides(color = guide_legend(title="Location: "))
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/ecdf.pdf", width = 9, height = 9)
ggplot(daily.summary, aes(median.PM, colour = loc)) + stat_ecdf(size = .7) + facet_wrap(~year, ncol = 3) +
scale_colour_brewer(palette = "Spectral") + xlab("Particulate matter concentration") + ylab("Probability") +
ggtitle("Empirical cumulative distribution function") +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
guides(color = guide_legend(title="Location: "))
dev.off()
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/ecdf.pdf", width = 9.5, height = 8)
ggplot(daily.summary, aes(median.PM, colour = loc)) + stat_ecdf(size = .7) + facet_wrap(~year, ncol = 3) +
scale_colour_brewer(palette = "Spectral") + xlab("Particulate matter concentration") + ylab("Probability") +
ggtitle("Empirical cumulative distribution function") +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
guides(color = guide_legend(title="Location: "))
dev.off()
ggplot(test.FM.1, aes(x = date.2, y = median.PM)) +
geom_line(aes(y = median.PM), color = "darkorchid2") +
facet_wrap(~year, scales = "free", ncol = 3) +
geom_ribbon(aes(ymin = median.PM - sd.PM , ymax = median.PM + sd.PM), alpha = 0.3, fill = "darkorchid2") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill="grey99", size=0.65, linetype="solid")) +
xlab("Date") + ylab("Median particulate matter concentration") +
ggtitle("Fort Myers")
test.FM <- daily[test.2$webcam_lat == 40.71176821, ]
test.FM$year <- substr(test.FM$date, 1, 4)
test.FM$month <- substr(test.FM$date, 5, 6)
test.FM$day <- substr(test.FM$date, 7, 8)
test.FM$date.2 <- as.Date(with(test.FM, paste(year, month, day, sep="-")), "%Y-%m-%d")
test.FM$date.3 <- as.Date(with(test.FM, paste(month, day, sep="-")), "%M-%d")
test.FM.group <- test.FM %>% group_by(date.2) %>%
dplyr::summarize(median.PM = median(PM_value, na.rm=TRUE), sd.PM =  sd(PM_value, na.rm=TRUE))
test.FM.1 <- left_join(test.FM, test.FM.group, by = "date.2")
ggplot(test.FM.1, aes(x = date.2, y = median.PM)) +
geom_line(aes(y = median.PM), color = "darkorchid2") +
facet_wrap(~year, scales = "free", ncol = 3) +
geom_ribbon(aes(ymin = median.PM - sd.PM , ymax = median.PM + sd.PM), alpha = 0.3, fill = "darkorchid2") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill="grey99", size=0.65, linetype="solid")) +
xlab("Date") + ylab("Median particulate matter concentration") +
ggtitle("Fort Myers")
test.FM <- daily[test.2$webcam_lat == 40.767376, ]
test.FM$year <- substr(test.FM$date, 1, 4)
test.FM$month <- substr(test.FM$date, 5, 6)
test.FM$day <- substr(test.FM$date, 7, 8)
test.FM$date.2 <- as.Date(with(test.FM, paste(year, month, day, sep="-")), "%Y-%m-%d")
test.FM$date.3 <- as.Date(with(test.FM, paste(month, day, sep="-")), "%M-%d")
test.FM.group <- test.FM %>% group_by(date.2) %>%
dplyr::summarize(median.PM = median(PM_value, na.rm=TRUE), sd.PM =  sd(PM_value, na.rm=TRUE))
test.FM.1 <- left_join(test.FM, test.FM.group, by = "date.2")
ggplot(test.FM.1, aes(x = date.2, y = median.PM)) +
geom_line(aes(y = median.PM), color = "darkorchid2") +
facet_wrap(~year, scales = "free", ncol = 3) +
geom_ribbon(aes(ymin = median.PM - sd.PM , ymax = median.PM + sd.PM), alpha = 0.3, fill = "darkorchid2") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill="grey99", size=0.65, linetype="solid")) +
xlab("Date") + ylab("Median particulate matter concentration") +
ggtitle("Fort Myers")
ggplot(test.FM.1, aes(x = date.2, y = median.PM)) +
geom_line(aes(y = median.PM), color = "darkorchid2") +
facet_wrap(~year, scales = "free", ncol = 3) +
geom_ribbon(aes(ymin = median.PM - sd.PM , ymax = median.PM + sd.PM), alpha = 0.3, fill = "darkorchid2") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill="grey99", size=0.65, linetype="solid")) +
xlab("Date") + ylab("Median particulate matter concentration") +
ggtitle("Fort Myers")
test.FM <- daily[test.2$webcam_lat == 26.640628, ]
test.FM$year <- substr(test.FM$date, 1, 4)
test.FM$month <- substr(test.FM$date, 5, 6)
test.FM$day <- substr(test.FM$date, 7, 8)
test.FM$date.2 <- as.Date(with(test.FM, paste(year, month, day, sep="-")), "%Y-%m-%d")
test.FM$date.3 <- as.Date(with(test.FM, paste(month, day, sep="-")), "%M-%d")
test.FM.group <- test.FM %>% group_by(date.2) %>%
dplyr::summarize(median.PM = median(PM_value, na.rm=TRUE), sd.PM =  sd(PM_value, na.rm=TRUE))
test.FM.1 <- left_join(test.FM, test.FM.group, by = "date.2")
ggplot(test.FM.1, aes(x = date.2, y = median.PM)) +
geom_line(aes(y = median.PM), color = "darkorchid2") +
facet_wrap(~year, scales = "free", ncol = 3) +
geom_ribbon(aes(ymin = median.PM - sd.PM , ymax = median.PM + sd.PM), alpha = 0.3, fill = "darkorchid2") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill="grey99", size=0.65, linetype="solid")) +
xlab("Date") + ylab("Median particulate matter concentration") +
ggtitle("Fort Myers")
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/FM.pdf", width = 9, height = 8)
ggplot(test.FM.1, aes(x = date.2, y = median.PM)) +
geom_line(aes(y = median.PM), color = "darkorchid2") +
facet_wrap(~year, scales = "free", ncol = 3) +
geom_ribbon(aes(ymin = median.PM - sd.PM , ymax = median.PM + sd.PM), alpha = 0.3, fill = "darkorchid2") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill="grey99", size=0.65, linetype="solid")) +
xlab("Date") + ylab("Median particulate matter concentration") +
ggtitle("Fort Myers")
dev.off()
loc
test.FM <- daily[test.2$webcam_lat == 35.30768516, ]
test.FM$year <- substr(test.FM$date, 1, 4)
test.FM$month <- substr(test.FM$date, 5, 6)
test.FM$day <- substr(test.FM$date, 7, 8)
test.FM$date.2 <- as.Date(with(test.FM, paste(year, month, day, sep="-")), "%Y-%m-%d")
test.FM$date.3 <- as.Date(with(test.FM, paste(month, day, sep="-")), "%M-%d")
test.FM.group <- test.FM %>% group_by(date.2) %>%
dplyr::summarize(median.PM = median(PM_value, na.rm=TRUE), sd.PM =  sd(PM_value, na.rm=TRUE))
test.FM.1 <- left_join(test.FM, test.FM.group, by = "date.2")
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/Charlotte.pdf", width = 9, height = 8)
ggplot(test.FM.1, aes(x = date.2, y = median.PM)) +
geom_line(aes(y = median.PM), color = "firebrick3") +
facet_wrap(~year, scales = "free", ncol = 3) +
geom_ribbon(aes(ymin = median.PM - sd.PM , ymax = median.PM + sd.PM), alpha = 0.3, fill = "firebrick3") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %d") +
theme(axis.text.x = element_text(angle = 90, hjust = 1)) +
theme(strip.background = element_rect(fill="grey99", size=0.65, linetype="solid")) +
xlab("Date") + ylab("Median particulate matter concentration") +
ggtitle("Charlotte")
dev.off()
daily.webcam12 <- filter(daily, webcam_id == 12)
View(daily.webcam12)
daily.webcam12 <- filter(daily, webcam_id == 11)
A1 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/A1.csv", header = FALSE)
View(A1)
melt(A1)
packages <- c("dplyr", "ggplot2", "reshape2")
lapply(packages, require, character.only = TRUE)
melt(A1)
A1 <- melt(A1)
View(A1)
A3 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/A3.csv", header = FALSE)
A3 <- melt(A3)
A1$variable <- "red"
A2$variable <- "green"
A2 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/A2.csv", header = FALSE)
A2 <- melt(A2)
A2$variable <- "green"
A3$variable <- "blue"
clear <- rbind(A1, A2, A3)
View(clear)
ggplot(clear, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.1)
ggplot(clear, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.1) + geom_density(position = "stack")
ggplot(clear, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.1)
clear$type <- "clear"
B1 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/B1.csv", header = FALSE)
B1 <- melt(B1)
B1$variable <- "red"
B2 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/B2.csv", header = FALSE)
B2 <- melt(B2)
B2$variable <- "green"
B3 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/B3.csv", header = FALSE)
B3 <- melt(B3)
B3$variable <- "blue"
hazy <- rbind(B1, B2, B3)
hazy$type <- "hazy"
clear.all <- rbind(clear, hazy)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.1) + facet_wrap(~type)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.1) + facet_grid(.~type)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.1) + facet_grid(type~.)
A1 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/A1.csv", header = FALSE)
A1 <- melt(A1)
A1$variable <- "red"
A2 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/A2.csv", header = FALSE)
A2 <- melt(A2)
A2$variable <- "green"
A3 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/A3.csv", header = FALSE)
A3 <- melt(A3)
A3$variable <- "blue"
clear <- rbind(A1, A2, A3)
clear$type <- "clear"
B1 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/B1.csv", header = FALSE)
B1 <- melt(B1)
B1$variable <- "red"
B2 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/B2.csv", header = FALSE)
B2 <- melt(B2)
B2$variable <- "green"
B3 <- read.csv("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Input/B3.csv", header = FALSE)
B3 <- melt(B3)
B3$variable <- "blue"
hazy <- rbind(B1, B2, B3)
hazy$type <- "hazy"
clear.all <- rbind(clear, hazy)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.1) + facet_grid(type~.)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.2, position = "stack") + facet_grid(type~.)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.2) + facet_grid(type~.)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.2) + facet_grid(type~., scales = "free.y")
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.2) + facet_grid(type~., scales = "free_y")
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.2) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("red", "blue", "green"))
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.2) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("blue", "green", "red")) +
scale_fill_manual(values = c("blue", "green", "red"))
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.2) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("blue", "springgreen3", "red")) +
scale_fill_manual(values = c("blue", "springgreen3", "red"))
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.25) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red3")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red3"))
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.25) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2"))
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.25) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
guides(color = guide_legend(title="Pixel color: "))
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.25) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid"))
clear$type <- "Clear image"
hazy$type <- "Hazy image"
clear.all <- rbind(clear, hazy)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.25) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle(Pixel distribution)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.25) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle("RGB pixel distribution")
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.15) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle("RGB pixel distribution")
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/pixel.pdf", width = 9, height = 6)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.15) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle("RGB pixel distribution")
dev.off()
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/pixel.pdf", width = 8, height = 5.5)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.15) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle("RGB pixel distribution")
dev.off()
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/pixel.pdf", width = 7.5, height = 6.5)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.15) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle("RGB pixel distribution")
dev.off()
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/pixel.pdf", width = 7, height = 5.5)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.15) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle("RGB pixel distribution")
dev.off()
pdf("/Users/adele/Desktop/Stanford-classes/CS325b/Project/Figures/pixel.pdf", width = 7, height = 5)
ggplot(clear.all, aes(value, fill = variable, colour = variable)) +
geom_density(alpha = 0.15) + facet_grid(type~., scales = "free_y") +
scale_colour_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
scale_fill_manual(values = c("dodgerblue3", "springgreen3", "red2")) +
theme(strip.background = element_rect(fill="grey99", size=0.75, linetype="solid")) +
xlab("Pixel value") + ylab("Density") + ggtitle("RGB pixel distribution")
dev.off()
getwd()
daily <- read.table(file = "/Users/adele/Desktop/CS325b_project/data/AMOS_AQ_daily.csv")
daily <- read.csv(file = "/Users/adele/Desktop/CS325b_project/data/AMOS_AQ_daily.csv")
View(daily)
test <- read.csv("/Users/adele/Desktop/AMOS_AQ_hourly.csv", header = TRUE)
View(test)
test_UT <- filter(test, webcam_ID = "20265")
test$webcam_ID
packages <- c("dplyr")
lapply(packages, require, character.only = TRUE)
test_UT <- filter(test, webcam_ID = "20265")
test_UT <- filter(test, webcam_ID == "20265")
test_UT <- filter(test, webcam_id == "20265")
View(test_UT)
test_UT <- filter(test, webcam_id == "20265|13342|20258")
test_UT <- filter(test, webcam_id == "20265" | webcam_id == "13342" | webcam_id == "20258")
quantile(test_UT$PM_value, prob = seq(0, 1, length = 11), type = 5)
quantile(test_UT$PM_value, prob = seq(0, 1, length = 6), type = 5)
a <- quantile(test_UT$PM_value, prob = seq(0, 1, length = 6), type = 5)
a
a
a <- quantile(test_UT$PM_value, prob = seq(0, 1, length = 5), type = 5)
a
a <- quantile(test_UT$PM_value, prob = seq(0, 1, length = 7), type = 5)
a
View(test)
test_UT <- filter(test, webcam_id == "18879")
test_UT_non <- filter(test_UT, PM_value >=0)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 11), type = 5)
test_UT <- filter(test, webcam_id == "18879" | webcam_id == "13342" | webcam_id == "20258")
test_UT_non <- filter(test_UT, PM_value >=0)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 11), type = 5)
test_UT <- filter(test, webcam_id == "20265" | webcam_id == "13342" | webcam_id == "20258")
test_UT_non <- filter(test_UT, PM_value >=0)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 11), type = 5)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 7), type = 5)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 6), type = 5)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 6), type = 5)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 5), type = 5)
quantile(test_UT_non$PM_value, prob = seq(0, 1, length = 5), type = 5)
packages <- c("dplyr", "RcppCNPy")
lapply(packages, require, character.only = TRUE)
install.packages("RcppCNPy")
packages <- c("dplyr", "RcppCNPy")
lapply(packages, require, character.only = TRUE)
getwd)_
getwd()
setwd("/Users/adele/Desktop/CS325b_project/CS325B-Big-Brother-Air-Quality-Group-/visualizations")
packages <- c("dplyr", "RcppCNPy")
lapply(packages, require, character.only = TRUE)
labels.all.txt <- read.table("datasets/ALL_EXAMPLES_for_week6_presentation_dataset.txt")
dim(labels.all.txt)
labels.all <- npyLoad("datasets/ALL_EXAMPLES_for_week6_presentation_dataset.npy")
View(labels.all)
View(labels.all.txt)
labels.all.txt <- read.table("datasets/ALL_EXAMPLES_for_week6_presentation_dataset.txt", header = TRUE)
unique(labels.all.txt$webcamId)
labels.all.txt %>%
group_by(webcamId) %>%
summarise(value=calculateQuantiles(webcamId))
calculateQuantiles <- function(x){
quantile(x, prob = seq(0, 1, length = 6), type = 5)
}
labels.all.txt %>%
group_by(webcamId) %>%
summarise(value=calculateQuantiles(webcamId))
x <- labels.all.txt$webcamId[1:100]
calculateQuantiles <- function(x){
quantile(x, prob = seq(0, 1, length = 6), type = 5)
}
calculateQuantiles(x)
x <- labels.all.txt$pm[1:100]
calculateQuantiles <- function(x){
quantile(x, prob = seq(0, 1, length = 6), type = 5)
}
calculateQuantiles(x)
x <- labels.all.txt$pm[1:100]
calculateQuantiles <- function(x){
lapply(quantile(x, prob = seq(0, 1, length = 6), type = 5))
}
calculateQuantiles(x)
library(plyr)
do.call("rbind", tapply(labels.all.txt$webcamId, quantile))
library(dplyr)
Claims6 <- data.frame(year = factor(rep(c(2015, 2016), each = 10)),
Expense = runif(20))
Claims6
Claims6 %>% group_by(year) %>%
do(data.frame(t(quantile(.$Expense, probs = c(0.10, 0.30, 0.50, 0.80)))))
Claims6 %>% group_by(year) %>%
do(data.frame(t(quantile(.$Expense, probs = c(0.0, 0.10, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)))))
labels.all.txt %>% group_by(webcamId) %>%
do(data.frame(t(quantile(.$pm, probs = c(0.0, 0.10, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1)))))
seq(0, 1, by = 11)
seq(0, 1, by = 0.1)
bins = seq(0, 1, by = 0.1)
labels.all.txt %>% group_by(webcamId) %>%
do(data.frame(t(quantile(.$pm, probs = bins))))
bins <- labels.all.txt %>% group_by(webcamId) %>%
do(data.frame(t(quantile(.$pm, probs = bins))))
bins
packages <- c("plyr", "RcppCNPy")
lapply(packages, require, character.only = TRUE)
labels.all <- npyLoad("datasets/ALL_EXAMPLES_for_week6_presentation_dataset.npy")
labels.all.txt <- read.table("datasets/ALL_EXAMPLES_for_week6_presentation_dataset.txt", header = TRUE)
bins = seq(0, 1, by = 0.1)
bins <- labels.all.txt %>% group_by(webcamId) %>%
do(data.frame(t(quantile(.$pm, probs = bins))))
write.csv(bins, file = "Output/Bins_by_webcamID.csv", row.names = FALSE)
write.table(bins, file = "Output/Bins_by_webcamID.txt", row.names = FALSE, sep = ",")
dt <- data.table(x=c(1:200),y=rnorm(200))
dt <- data.frame(x=c(1:200),y=rnorm(200))
dens <- density(dt$y)
df <- data.frame(x=dens$x, y=dens$y)
probs <- c(0.1, 0.25, 0.5, 0.75, 0.9)
quantiles <- quantile(dt$y, prob=probs)
df$quant <- factor(findInterval(df$x,quantiles))
df
quantiles
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
packages <- c("plyr", "RcppCNPy", "ggplot2")
lapply(packages, require, character.only = TRUE)
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
quantiles <- quantile(dt$y, prob=bins)
bins
bins
bins = seq(0, 1, by = 0.1)
quantiles <- quantile(dt$y, prob=bins)
df$quant <- factor(findInterval(df$x,quantiles))
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
bins = seq(0, 1, by = 0.2)
quantiles <- quantile(dt$y, prob=bins)
df$quant <- factor(findInterval(df$x,quantiles))
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) + scale_x_continuous(breaks=quantiles) + scale_fill_brewer(guide="none")
bins
df$quant
quantiles
ggplot(df, aes(x,y)) + geom_line() + geom_ribbon(aes(ymin=0, ymax=y, fill=quant)) +scale_fill_brewer(guide="none")
bins = seq(0, 1, by = 0.1)
labels.all.txt %>%
mutate(Quantile = findInterval(pm, quantile(pm, probs = bins))
)
bins = seq(0, 1, by = 0.1)
labels.all.txt.quant <- labels.all.txt %>% group_by(webcamId) %>%
mutate(quantile = findInterval(pm, quantile(pm, probs = bins)))
View(labels.all.txt.quant)
bins2 = seq(0, 1, by = 0.2)
labels.all.txt.quant <- labels.all.txt %>% group_by(webcamId) %>%
mutate(quantile = findInterval(pm, quantile(pm, probs = bins2)))
df
ggplot(labels.all.txt.quant, aes(pm)) + geom_density() + geom_ribbon(aes(fill=quantile)) +scale_fill_brewer(guide="none")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(aes(fill=quantile)) +scale_fill_brewer(guide="none")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density() + geom_ribbon(aes(fill=quantile)) + facet_wrap(~webcamId) +scale_fill_brewer(guide="none")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density()  + facet_wrap(~webcamId) +scale_fill_brewer(guide="none")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density()  + facet_wrap(~webcamId) +scale_fill_brewer(guide="none") + geom_ribbon(aes(x=x,ymax=y),ymin=0, fill=quantile)
library(data.table)
install.packages("data.table")
packages <- c("plyr", "RcppCNPy", "ggplot2", "data.table")
lapply(packages, require, character.only = TRUE)
library(data.table)
set.seed(1)
value <- c(rnorm(50, mean = 1), rnorm(50, mean = 3))
site  <- c(rep("site1", 50), rep("site2", 50))
dt    <- data.table(site,value)
dt
#  generate kdf
gg <- dt[,list(x=density(value)$x, y=density(value)$y),by="site"]
gg
#  calculate quantiles
q1 <- quantile(dt[site=="site1",value],0.01)
q2 <- quantile(dt[site=="site2",value],0.75)
# generate the plot
ggplot(dt) + stat_density(aes(x=value,color=site),geom="line",position="dodge")+
geom_ribbon(data=subset(gg,site=="site1" & x>q1),
aes(x=x,ymax=y),ymin=0,fill="red", alpha=0.5)+
geom_ribbon(data=subset(gg,site=="site2" & x<q2),
aes(x=x,ymax=y),ymin=0,fill="blue", alpha=0.5)
gg
gg2 <- labels.all.txt.quant[,list(x = density(pm)$x, y=density(pm)$y),by="webcamId"]
bins2 = seq(0, 1, by = 0.2)
labels.all.txt.quant
dt
test <- subset(labels.all.txt.quant, select = c(pm, webcamId))
test
gg2 <- test[,list(x = density(pm)$x, y=density(pm)$y),by="webcamId"]
ggplot(labels.all.txt.quant, aes(pm)) + geom_density() +scale_fill_brewer(guide="none")  + facet_wrap(~webcamId)
bins2 = seq(0, 1, by = 0.2)
labels.all.txt.quant <- labels.all.txt %>% group_by(webcamId) %>%
mutate(quantile = findInterval(pm, quantile(pm, probs = bins2)))
labels.all.txt.quant
ggplot(labels.all.txt.quant, aes(pm)) + geom_density() +scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_linedraw()
ggplot(labels.all.txt.quant, aes(pm)) + geom_density() +scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_classic()
linedraw
ggplot(labels.all.txt.quant, aes(pm)) + geom_density() +scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_linedraw()
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "blue") +scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_linedraw()
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue3") +scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_linedraw()
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue3") +
scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_linedraw() +
xlab("PM label") + ylab("Density")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue3") +
scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_linedraw() +
xlab("PM label") + ylab("Density") + ggtitle("PM Density by WebcamId")
ggsave("Distribution.pdf", width = 10, height = 10, units = "cm")
ggsave("Distribution.pdf", width = 20, height = 10, units = "cm")
ggsave("Distribution.pdf", width = 20, height = 15, units = "cm")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue3") +
scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_light() +
xlab("PM label") + ylab("Density") + ggtitle("PM Density by WebcamID")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue3") +
scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_minimal() +
xlab("PM label") + ylab("Density") + ggtitle("PM Density by WebcamID")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue3") +
scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_light() +
xlab("PM label") + ylab("Density") + ggtitle("PM Density by WebcamID")
ggsave("Distribution.pdf", width = 20, height = 15, units = "cm")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue2") +
scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_light() +
xlab("PM label") + ylab("Density") + ggtitle("PM Density by WebcamID")
ggsave("Distribution.pdf", width = 25, height = 18, units = "cm")
ggplot(labels.all.txt.quant, aes(pm)) + geom_density(color = "dodgerblue2") +
scale_fill_brewer(guide="none")  + facet_wrap(~webcamId) + theme_light() +
xlab("PM label") + ylab("Density")
ggsave("Distribution.pdf", width = 25, height = 18, units = "cm")
